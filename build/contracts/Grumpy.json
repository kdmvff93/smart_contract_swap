{
  "contractName": "Grumpy",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "capped_supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "charity_wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developer_wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token_name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token_symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capped_supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charity_wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developer_wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/kdmcg/Documents/oz/contracts/Grumpy.sol\":\"Grumpy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/kdmcg/Documents/oz/contracts/Grumpy.sol\":{\"keccak256\":\"0xa20b4f5cd7f4c49cce853fa6eba3fc36d8d6e46d61aa2b8a9382327c63644345\",\"urls\":[\"bzz-raw://66059800813dfbe9922615a6117a18f85f7513b8ff0da1b8d85a007bd46c90d4\",\"dweb:/ipfs/QmZx1vpZiJVyNuFuBbEp18WyHVTmzwb8xQZk1VrLpmcdLK\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x861c86995be13aae31adcd5d3fedd5a9777e1882fa1bca0a86115f63bda07de1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef9b51ad740e7dc808944270324e6905056d172d3e7803ba9149225e3620974b\",\"dweb:/ipfs/QmdUcsJN42BMVmdwLuERSdaGh1teUYKFYNFUso8sHogi1H\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "0x60a06040526001600555600160065560016007556040518060400160405280600e81526020017f4772756d70792046696e616e6365000000000000000000000000000000000000815250600890805190602001906200006092919062000488565b506040518060400160405280600681526020017f4752554d5059000000000000000000000000000000000000000000000000000081525060099080519060200190620000ae92919062000488565b5069152d02c7e14af6800000600a5569152d02c7e14af6800000600b55348015620000d857600080fd5b50600a5460088054620000eb906200070a565b80601f016020809104026020016040519081016040528092919081815260200182805462000119906200070a565b80156200016a5780601f106200013e576101008083540402835291602001916200016a565b820191906000526020600020905b8154815290600101906020018083116200014c57829003601f168201915b5050505050600980546200017e906200070a565b80601f0160208091040260200160405190810160405280929190818152602001828054620001ac906200070a565b8015620001fd5780601f10620001d157610100808354040283529160200191620001fd565b820191906000526020600020905b815481529060010190602001808311620001df57829003601f168201915b505050505081600390805190602001906200021a92919062000488565b5080600490805190602001906200023392919062000488565b505050600081116200027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000273906200060f565b60405180910390fd5b806080818152505050600a54600b541115620002cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002c69062000631565b60405180910390fd5b620002f7620002e3620002fd60201b60201c565b600b546200030560201b62000b551760201c565b6200079e565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000378576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200036f9062000653565b60405180910390fd5b6200038c600083836200047e60201b60201c565b8060026000828254620003a09190620006a3565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620003f79190620006a3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200045e919062000675565b60405180910390a36200047a600083836200048360201b60201c565b5050565b505050565b505050565b82805462000496906200070a565b90600052602060002090601f016020900481019282620004ba576000855562000506565b82601f10620004d557805160ff191683800117855562000506565b8280016001018555821562000506579182015b8281111562000505578251825591602001919060010190620004e8565b5b50905062000515919062000519565b5090565b5b80821115620005345760008160009055506001016200051a565b5090565b60006200054760158362000692565b91507f45524332304361707065643a20636170206973203000000000000000000000006000830152602082019050919050565b60006200058960198362000692565b91507f436f6d6d6f6e45524332303a20636170206578636565646564000000000000006000830152602082019050919050565b6000620005cb601f8362000692565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620006098162000700565b82525050565b600060208201905081810360008301526200062a8162000538565b9050919050565b600060208201905081810360008301526200064c816200057a565b9050919050565b600060208201905081810360008301526200066e81620005bc565b9050919050565b60006020820190506200068c6000830184620005fe565b92915050565b600082825260208201905092915050565b6000620006b08262000700565b9150620006bd8362000700565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006f557620006f462000740565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200072357607f821691505b602082108114156200073a57620007396200076f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b608051611d36620007ba600039600061064f0152611d366000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063355274ea116100ad578063947a316811610071578063947a31681461031257806395d89b4114610330578063a457c2d71461034e578063a9059cbb1461037e578063dd62ed3e146103ae57610121565b8063355274ea1461025857806339509351146102765780634465c7d1146102a657806370a08231146102c45780638da5cb5b146102f457610121565b80631dc1ba77116100f45780631dc1ba77146101b05780631f772a34146101ce5780632325b961146101ec57806323b872dd1461020a578063313ce5671461023a57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806318369a2a14610192575b600080fd5b61012e6103de565b60405161013b91906118b1565b60405180910390f35b61015e600480360381019061015991906113f4565b610470565b60405161016b9190611896565b60405180910390f35b61017c61048e565b6040516101899190611a13565b60405180910390f35b61019a610498565b6040516101a79190611a13565b60405180910390f35b6101b861049e565b6040516101c5919061187b565b60405180910390f35b6101d66104b6565b6040516101e391906118b1565b60405180910390f35b6101f4610544565b6040516102019190611a13565b60405180910390f35b610224600480360381019061021f91906113a5565b61054a565b6040516102319190611896565b60405180910390f35b610242610642565b60405161024f9190611a2e565b60405180910390f35b61026061064b565b60405161026d9190611a13565b60405180910390f35b610290600480360381019061028b91906113f4565b610673565b60405161029d9190611896565b60405180910390f35b6102ae61071f565b6040516102bb919061187b565b60405180910390f35b6102de60048036038101906102d99190611340565b610737565b6040516102eb9190611a13565b60405180910390f35b6102fc61077f565b604051610309919061187b565b60405180910390f35b61031a6107a5565b60405161032791906118b1565b60405180910390f35b610338610833565b60405161034591906118b1565b60405180910390f35b610368600480360381019061036391906113f4565b6108c5565b6040516103759190611896565b60405180910390f35b610398600480360381019061039391906113f4565b6109b0565b6040516103a59190611896565b60405180910390f35b6103c860048036038101906103c39190611369565b610ace565b6040516103d59190611a13565b60405180910390f35b6060600380546103ed90611c02565b80601f016020809104026020016040519081016040528092919081815260200182805461041990611c02565b80156104665780601f1061043b57610100808354040283529160200191610466565b820191906000526020600020905b81548152906001019060200180831161044957829003601f168201915b5050505050905090565b600061048461047d610cb5565b8484610cbd565b6001905092915050565b6000600254905090565b600b5481565b732789f51db58676895afb1227d03c4e950169258181565b600980546104c390611c02565b80601f01602080910402602001604051908101604052809291908181526020018280546104ef90611c02565b801561053c5780601f106105115761010080835404028352916020019161053c565b820191906000526020600020905b81548152906001019060200180831161051f57829003601f168201915b505050505081565b600a5481565b6000610557848484610e88565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105a2610cb5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061990611953565b60405180910390fd5b6106368561062e610cb5565b858403610cbd565b60019150509392505050565b60006009905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610715610680610cb5565b84846001600061068e610cb5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107109190611a65565b610cbd565b6001905092915050565b73bcb683e807737c15558f9b0c1120fdf2ec84898781565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600880546107b290611c02565b80601f01602080910402602001604051908101604052809291908181526020018280546107de90611c02565b801561082b5780601f106108005761010080835404028352916020019161082b565b820191906000526020600020905b81548152906001019060200180831161080e57829003601f168201915b505050505081565b60606004805461084290611c02565b80601f016020809104026020016040519081016040528092919081815260200182805461086e90611c02565b80156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b5050505050905090565b600080600160006108d4610cb5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610991576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610988906119d3565b60405180910390fd5b6109a561099c610cb5565b85858403610cbd565b600191505092915050565b60008060646109ca6006548561110990919063ffffffff16565b6109d49190611abb565b9050600060646109ef6005548661110990919063ffffffff16565b6109f99190611abb565b905060006064610a146007548761110990919063ffffffff16565b610a1e9190611abb565b9050610a31610a2b610cb5565b8461111f565b610a57610a3c610cb5565b732789f51db58676895afb1227d03c4e950169258184610e88565b610a7d610a62610cb5565b73bcb683e807737c15558f9b0c1120fdf2ec84898783610e88565b610ac5610a88610cb5565b87610ac084610ab287610aa48a8d6112f690919063ffffffff16565b6112f690919063ffffffff16565b6112f690919063ffffffff16565b610e88565b50505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc906119f3565b60405180910390fd5b610bd16000838361130c565b8060026000828254610be39190611a65565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c389190611a65565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c9d9190611a13565b60405180910390a3610cb160008383611311565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d24906119b3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611913565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e7b9190611a13565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5f906118d3565b60405180910390fd5b610f7383838361130c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff090611933565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461108c9190611a65565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110f09190611a13565b60405180910390a3611103848484611311565b50505050565b600081836111179190611aec565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118690611973565b60405180910390fd5b61119b8260008361130c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611218906118f3565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546112789190611b46565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112dd9190611a13565b60405180910390a36112f183600084611311565b505050565b600081836113049190611b46565b905092915050565b505050565b505050565b60008135905061132581611cd2565b92915050565b60008135905061133a81611ce9565b92915050565b60006020828403121561135257600080fd5b600061136084828501611316565b91505092915050565b6000806040838503121561137c57600080fd5b600061138a85828601611316565b925050602061139b85828601611316565b9150509250929050565b6000806000606084860312156113ba57600080fd5b60006113c886828701611316565b93505060206113d986828701611316565b92505060406113ea8682870161132b565b9150509250925092565b6000806040838503121561140757600080fd5b600061141585828601611316565b92505060206114268582860161132b565b9150509250929050565b61143981611b7a565b82525050565b61144881611b8c565b82525050565b600061145982611a49565b6114638185611a54565b9350611473818560208601611bcf565b61147c81611cc1565b840191505092915050565b6000611494602383611a54565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114fa602283611a54565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611560602283611a54565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115c6602683611a54565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061162c602883611a54565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611692602183611a54565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116f8602583611a54565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061175e602483611a54565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006117c4602583611a54565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061182a601f83611a54565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61186681611bb8565b82525050565b61187581611bc2565b82525050565b60006020820190506118906000830184611430565b92915050565b60006020820190506118ab600083018461143f565b92915050565b600060208201905081810360008301526118cb818461144e565b905092915050565b600060208201905081810360008301526118ec81611487565b9050919050565b6000602082019050818103600083015261190c816114ed565b9050919050565b6000602082019050818103600083015261192c81611553565b9050919050565b6000602082019050818103600083015261194c816115b9565b9050919050565b6000602082019050818103600083015261196c8161161f565b9050919050565b6000602082019050818103600083015261198c81611685565b9050919050565b600060208201905081810360008301526119ac816116eb565b9050919050565b600060208201905081810360008301526119cc81611751565b9050919050565b600060208201905081810360008301526119ec816117b7565b9050919050565b60006020820190508181036000830152611a0c8161181d565b9050919050565b6000602082019050611a28600083018461185d565b92915050565b6000602082019050611a43600083018461186c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a7082611bb8565b9150611a7b83611bb8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ab057611aaf611c34565b5b828201905092915050565b6000611ac682611bb8565b9150611ad183611bb8565b925082611ae157611ae0611c63565b5b828204905092915050565b6000611af782611bb8565b9150611b0283611bb8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b3b57611b3a611c34565b5b828202905092915050565b6000611b5182611bb8565b9150611b5c83611bb8565b925082821015611b6f57611b6e611c34565b5b828203905092915050565b6000611b8582611b98565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611bed578082015181840152602081019050611bd2565b83811115611bfc576000848401525b50505050565b60006002820490506001821680611c1a57607f821691505b60208210811415611c2e57611c2d611c92565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611cdb81611b7a565b8114611ce657600080fd5b50565b611cf281611bb8565b8114611cfd57600080fd5b5056fea26469706673582212204d5e5c5c2bcdf5e01a36ff2e32619c327e54373fdb540c0ed51c87e08d15c29164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063355274ea116100ad578063947a316811610071578063947a31681461031257806395d89b4114610330578063a457c2d71461034e578063a9059cbb1461037e578063dd62ed3e146103ae57610121565b8063355274ea1461025857806339509351146102765780634465c7d1146102a657806370a08231146102c45780638da5cb5b146102f457610121565b80631dc1ba77116100f45780631dc1ba77146101b05780631f772a34146101ce5780632325b961146101ec57806323b872dd1461020a578063313ce5671461023a57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806318369a2a14610192575b600080fd5b61012e6103de565b60405161013b91906118b1565b60405180910390f35b61015e600480360381019061015991906113f4565b610470565b60405161016b9190611896565b60405180910390f35b61017c61048e565b6040516101899190611a13565b60405180910390f35b61019a610498565b6040516101a79190611a13565b60405180910390f35b6101b861049e565b6040516101c5919061187b565b60405180910390f35b6101d66104b6565b6040516101e391906118b1565b60405180910390f35b6101f4610544565b6040516102019190611a13565b60405180910390f35b610224600480360381019061021f91906113a5565b61054a565b6040516102319190611896565b60405180910390f35b610242610642565b60405161024f9190611a2e565b60405180910390f35b61026061064b565b60405161026d9190611a13565b60405180910390f35b610290600480360381019061028b91906113f4565b610673565b60405161029d9190611896565b60405180910390f35b6102ae61071f565b6040516102bb919061187b565b60405180910390f35b6102de60048036038101906102d99190611340565b610737565b6040516102eb9190611a13565b60405180910390f35b6102fc61077f565b604051610309919061187b565b60405180910390f35b61031a6107a5565b60405161032791906118b1565b60405180910390f35b610338610833565b60405161034591906118b1565b60405180910390f35b610368600480360381019061036391906113f4565b6108c5565b6040516103759190611896565b60405180910390f35b610398600480360381019061039391906113f4565b6109b0565b6040516103a59190611896565b60405180910390f35b6103c860048036038101906103c39190611369565b610ace565b6040516103d59190611a13565b60405180910390f35b6060600380546103ed90611c02565b80601f016020809104026020016040519081016040528092919081815260200182805461041990611c02565b80156104665780601f1061043b57610100808354040283529160200191610466565b820191906000526020600020905b81548152906001019060200180831161044957829003601f168201915b5050505050905090565b600061048461047d610cb5565b8484610cbd565b6001905092915050565b6000600254905090565b600b5481565b732789f51db58676895afb1227d03c4e950169258181565b600980546104c390611c02565b80601f01602080910402602001604051908101604052809291908181526020018280546104ef90611c02565b801561053c5780601f106105115761010080835404028352916020019161053c565b820191906000526020600020905b81548152906001019060200180831161051f57829003601f168201915b505050505081565b600a5481565b6000610557848484610e88565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105a2610cb5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061990611953565b60405180910390fd5b6106368561062e610cb5565b858403610cbd565b60019150509392505050565b60006009905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610715610680610cb5565b84846001600061068e610cb5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107109190611a65565b610cbd565b6001905092915050565b73bcb683e807737c15558f9b0c1120fdf2ec84898781565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600880546107b290611c02565b80601f01602080910402602001604051908101604052809291908181526020018280546107de90611c02565b801561082b5780601f106108005761010080835404028352916020019161082b565b820191906000526020600020905b81548152906001019060200180831161080e57829003601f168201915b505050505081565b60606004805461084290611c02565b80601f016020809104026020016040519081016040528092919081815260200182805461086e90611c02565b80156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b5050505050905090565b600080600160006108d4610cb5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610991576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610988906119d3565b60405180910390fd5b6109a561099c610cb5565b85858403610cbd565b600191505092915050565b60008060646109ca6006548561110990919063ffffffff16565b6109d49190611abb565b9050600060646109ef6005548661110990919063ffffffff16565b6109f99190611abb565b905060006064610a146007548761110990919063ffffffff16565b610a1e9190611abb565b9050610a31610a2b610cb5565b8461111f565b610a57610a3c610cb5565b732789f51db58676895afb1227d03c4e950169258184610e88565b610a7d610a62610cb5565b73bcb683e807737c15558f9b0c1120fdf2ec84898783610e88565b610ac5610a88610cb5565b87610ac084610ab287610aa48a8d6112f690919063ffffffff16565b6112f690919063ffffffff16565b6112f690919063ffffffff16565b610e88565b50505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc906119f3565b60405180910390fd5b610bd16000838361130c565b8060026000828254610be39190611a65565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c389190611a65565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c9d9190611a13565b60405180910390a3610cb160008383611311565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d24906119b3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611913565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e7b9190611a13565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5f906118d3565b60405180910390fd5b610f7383838361130c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff090611933565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461108c9190611a65565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110f09190611a13565b60405180910390a3611103848484611311565b50505050565b600081836111179190611aec565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118690611973565b60405180910390fd5b61119b8260008361130c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611218906118f3565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546112789190611b46565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112dd9190611a13565b60405180910390a36112f183600084611311565b505050565b600081836113049190611b46565b905092915050565b505050565b505050565b60008135905061132581611cd2565b92915050565b60008135905061133a81611ce9565b92915050565b60006020828403121561135257600080fd5b600061136084828501611316565b91505092915050565b6000806040838503121561137c57600080fd5b600061138a85828601611316565b925050602061139b85828601611316565b9150509250929050565b6000806000606084860312156113ba57600080fd5b60006113c886828701611316565b93505060206113d986828701611316565b92505060406113ea8682870161132b565b9150509250925092565b6000806040838503121561140757600080fd5b600061141585828601611316565b92505060206114268582860161132b565b9150509250929050565b61143981611b7a565b82525050565b61144881611b8c565b82525050565b600061145982611a49565b6114638185611a54565b9350611473818560208601611bcf565b61147c81611cc1565b840191505092915050565b6000611494602383611a54565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114fa602283611a54565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611560602283611a54565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115c6602683611a54565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061162c602883611a54565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611692602183611a54565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116f8602583611a54565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061175e602483611a54565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006117c4602583611a54565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061182a601f83611a54565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61186681611bb8565b82525050565b61187581611bc2565b82525050565b60006020820190506118906000830184611430565b92915050565b60006020820190506118ab600083018461143f565b92915050565b600060208201905081810360008301526118cb818461144e565b905092915050565b600060208201905081810360008301526118ec81611487565b9050919050565b6000602082019050818103600083015261190c816114ed565b9050919050565b6000602082019050818103600083015261192c81611553565b9050919050565b6000602082019050818103600083015261194c816115b9565b9050919050565b6000602082019050818103600083015261196c8161161f565b9050919050565b6000602082019050818103600083015261198c81611685565b9050919050565b600060208201905081810360008301526119ac816116eb565b9050919050565b600060208201905081810360008301526119cc81611751565b9050919050565b600060208201905081810360008301526119ec816117b7565b9050919050565b60006020820190508181036000830152611a0c8161181d565b9050919050565b6000602082019050611a28600083018461185d565b92915050565b6000602082019050611a43600083018461186c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a7082611bb8565b9150611a7b83611bb8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ab057611aaf611c34565b5b828201905092915050565b6000611ac682611bb8565b9150611ad183611bb8565b925082611ae157611ae0611c63565b5b828204905092915050565b6000611af782611bb8565b9150611b0283611bb8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b3b57611b3a611c34565b5b828202905092915050565b6000611b5182611bb8565b9150611b5c83611bb8565b925082821015611b6f57611b6e611c34565b5b828203905092915050565b6000611b8582611b98565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611bed578082015181840152602081019050611bd2565b83811115611bfc576000848401525b50505050565b60006002820490506001821680611c1a57607f821691505b60208210811415611c2e57611c2d611c92565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611cdb81611b7a565b8114611ce657600080fd5b50565b611cf281611bb8565b8114611cfd57600080fd5b5056fea26469706673582212204d5e5c5c2bcdf5e01a36ff2e32619c327e54373fdb540c0ed51c87e08d15c29164736f6c63430008000033",
  "immutableReferences": {
    "1152": [
      {
        "length": 32,
        "start": 1615
      }
    ]
  },
  "sourceMap": "219:1959:0:-:0;;;340:1;318:23;;392:1;373:20;;454:1;430:25;;712:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;762:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;891:20;860:51;;1007:20;975:52;;1093:252;;;;;;;;;;1185:13;;1138:10;1896:113:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:12:0;1896:113:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;;;;;;;:::i;:::-;;1896:113;;427:1:6;420:4;:8;412:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;471:4;464:11;;;;;;376:106;1242:13:0::2;;1224:14;;:31;;1216:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1296:41;1308:12;:10;;;:12;;:::i;:::-;1322:14;;1296:11;;;;;:41;;:::i;:::-;219:1959:::0;;586:96:8;639:7;665:10;658:17;;586:96;:::o;8244:389:4:-;8346:1;8327:21;;:7;:21;;;;8319:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8395:49;8424:1;8428:7;8437:6;8395:20;;;:49;;:::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;;;;;8509:6;8487:9;:18;8497:7;8487:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8551:7;8530:37;;8547:1;8530:37;;;8560:6;8530:37;;;;;;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;;;:48;;:::i;:::-;8244:389;;:::o;10906:121::-;;;;:::o;11615:120::-;;;;:::o;219:1959:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:319:10:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:23;263:1;258:3;254:11;247:44;317:2;312:3;308:12;301:19;;153:173;;;:::o;332:323::-;;495:67;559:2;554:3;495:67;:::i;:::-;488:74;;592:27;588:1;583:3;579:11;572:48;646:2;641:3;637:12;630:19;;478:177;;;:::o;661:329::-;;824:67;888:2;883:3;824:67;:::i;:::-;817:74;;921:33;917:1;912:3;908:11;901:54;981:2;976:3;972:12;965:19;;807:183;;;:::o;996:118::-;1083:24;1101:5;1083:24;:::i;:::-;1078:3;1071:37;1061:53;;:::o;1120:419::-;;1324:2;1313:9;1309:18;1301:26;;1373:9;1367:4;1363:20;1359:1;1348:9;1344:17;1337:47;1401:131;1527:4;1401:131;:::i;:::-;1393:139;;1291:248;;;:::o;1545:419::-;;1749:2;1738:9;1734:18;1726:26;;1798:9;1792:4;1788:20;1784:1;1773:9;1769:17;1762:47;1826:131;1952:4;1826:131;:::i;:::-;1818:139;;1716:248;;;:::o;1970:419::-;;2174:2;2163:9;2159:18;2151:26;;2223:9;2217:4;2213:20;2209:1;2198:9;2194:17;2187:47;2251:131;2377:4;2251:131;:::i;:::-;2243:139;;2141:248;;;:::o;2395:222::-;;2526:2;2515:9;2511:18;2503:26;;2539:71;2607:1;2596:9;2592:17;2583:6;2539:71;:::i;:::-;2493:124;;;;:::o;2623:169::-;;2741:6;2736:3;2729:19;2781:4;2776:3;2772:14;2757:29;;2719:73;;;;:::o;2798:305::-;;2857:20;2875:1;2857:20;:::i;:::-;2852:25;;2891:20;2909:1;2891:20;:::i;:::-;2886:25;;3045:1;2977:66;2973:74;2970:1;2967:81;2964:2;;;3051:18;;:::i;:::-;2964:2;3095:1;3092;3088:9;3081:16;;2842:261;;;;:::o;3109:77::-;;3175:5;3164:16;;3154:32;;;:::o;3192:320::-;;3273:1;3267:4;3263:12;3253:22;;3320:1;3314:4;3310:12;3341:18;3331:2;;3397:4;3389:6;3385:17;3375:27;;3331:2;3459;3451:6;3448:14;3428:18;3425:38;3422:2;;;3478:18;;:::i;:::-;3422:2;3243:269;;;;:::o;3518:180::-;3566:77;3563:1;3556:88;3663:4;3660:1;3653:15;3687:4;3684:1;3677:15;3704:180;3752:77;3749:1;3742:88;3849:4;3846:1;3839:15;3873:4;3870:1;3863:15;219:1959:0;;;;;;;;;;;",
  "deployedSourceMap": "219:1959:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3162:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;975:52:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;762:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4804:478:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1353:92:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;561:81:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5677:212:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;563:94:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3326:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1064:20:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;712:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2285:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6376:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1453:722:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3884:149:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;4326:4;4319:11;;4171:166;;;;:::o;3162:106::-;3223:7;3249:12;;3242:19;;3162:106;:::o;975:52:0:-;;;;:::o;464:92::-;514:42;464:92;:::o;762:37::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;860:51::-;;;;:::o;4804:478:4:-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;5003:24;5030:11;:19;5042:6;5030:19;;;;;;;;;;;;;;;:33;5050:12;:10;:12::i;:::-;5030:33;;;;;;;;;;;;;;;;5003:60;;5101:6;5081:16;:26;;5073:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;5271:4;5264:11;;;4804:478;;;;;:::o;1353:92:0:-;1411:5;1436:1;1429:8;;1353:92;:::o;561:81:6:-;605:7;631:4;624:11;;561:81;:::o;5677:212:4:-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;5813:25;;;;;;;;;;;;;;;:34;5839:7;5813:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;:::-;5878:4;5871:11;;5677:212;;;;:::o;563:94:0:-;615:42;563:94;:::o;3326:125:4:-;3400:7;3426:9;:18;3436:7;3426:18;;;;;;;;;;;;;;;;3419:25;;3326:125;;;:::o;1064:20:0:-;;;;;;;;;;;;;:::o;712:43::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2285:102:4:-;2341:13;2373:7;2366:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2285:102;:::o;6376:405::-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;6512:25;;;;;;;;;;;;;;;:34;6538:7;6512:34;;;;;;;;;;;;;;;;6485:61;;6584:15;6564:16;:35;;6556:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;6770:4;6763:11;;;6376:405;;;;:::o;1453:722:0:-;1558:4;1580:18;1624:3;1601:20;1612:8;;1601:6;:10;;:20;;;;:::i;:::-;:26;;;;:::i;:::-;1580:47;;1638:21;1688:3;1662:23;1673:11;;1662:6;:10;;:23;;;;:::i;:::-;:29;;;;:::i;:::-;1638:53;;1702:23;1756:3;1728:25;1739:13;;1728:6;:10;;:25;;;;:::i;:::-;:31;;;;:::i;:::-;1702:57;;1843:31;1849:12;:10;:12::i;:::-;1863:10;1843:5;:31::i;:::-;1885:54;1895:12;:10;:12::i;:::-;514:42;1925:13;1885:9;:54::i;:::-;1950:58;1960:12;:10;:12::i;:::-;615:42;1992:15;1950:9;:58::i;:::-;2019:148;2043:12;:10;:12::i;:::-;2070:9;2094:62;2140:15;2094:41;2121:13;2094:22;2105:10;2094:6;:10;;:22;;;;:::i;:::-;:26;;:41;;;;:::i;:::-;:45;;:62;;;;:::i;:::-;2019:9;:148::i;:::-;1453:722;;;;;;;:::o;3884:149:4:-;3973:7;3999:11;:18;4011:5;3999:18;;;;;;;;;;;;;;;:27;4018:7;3999:27;;;;;;;;;;;;;;;;3992:34;;3884:149;;;;:::o;8244:389::-;8346:1;8327:21;;:7;:21;;;;8319:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;;;;;8509:6;8487:9;:18;8497:7;8487:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8551:7;8530:37;;8547:1;8530:37;;;8560:6;8530:37;;;;;;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;:::-;8244:389;;:::o;586:96:8:-;639:7;665:10;658:17;;586:96;:::o;9952:370:4:-;10100:1;10083:19;;:5;:19;;;;10075:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10180:1;10161:21;;:7;:21;;;;10153:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10262:6;10232:11;:18;10244:5;10232:18;;;;;;;;;;;;;;;:27;10251:7;10232:27;;;;;;;;;;;;;;;:36;;;;10299:7;10283:32;;10292:5;10283:32;;;10308:6;10283:32;;;;;;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;7408:1;7390:20;;:6;:20;;;;7382:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7491:1;7470:23;;:9;:23;;;;7462:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;7602:21;7626:9;:17;7636:6;7626:17;;;;;;;;;;;;;;;;7602:41;;7678:6;7661:13;:23;;7653:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7797:6;7781:13;:22;7761:9;:17;7771:6;7761:17;;;;;;;;;;;;;;;:42;;;;7847:6;7823:9;:20;7833:9;7823:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7886:9;7869:35;;7878:6;7869:35;;;7897:6;7869:35;;;;;;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;3382:96:9:-;3440:7;3470:1;3466;:5;;;;:::i;:::-;3459:12;;3382:96;;;;:::o;8953:576:4:-;9055:1;9036:21;;:7;:21;;;;9028:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;9166:22;9191:9;:18;9201:7;9191:18;;;;;;;;;;;;;;;;9166:43;;9245:6;9227:14;:24;;9219:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9362:6;9345:14;:23;9324:9;:18;9334:7;9324:18;;;;;;;;;;;;;;;:44;;;;9404:6;9388:12;;:22;;;;;;;:::i;:::-;;;;;;;;9452:1;9426:37;;9435:7;9426:37;;;9456:6;9426:37;;;;;;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:19;:48::i;:::-;8953:576;;;:::o;3039:96:9:-;3097:7;3127:1;3123;:5;;;;:::i;:::-;3116:12;;3039:96;;;;:::o;10906:121:4:-;;;;:::o;11615:120::-;;;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:118::-;2036:24;2054:5;2036:24;:::i;:::-;2031:3;2024:37;2014:53;;:::o;2073:109::-;2154:21;2169:5;2154:21;:::i;:::-;2149:3;2142:34;2132:50;;:::o;2188:364::-;;2304:39;2337:5;2304:39;:::i;:::-;2359:71;2423:6;2418:3;2359:71;:::i;:::-;2352:78;;2439:52;2484:6;2479:3;2472:4;2465:5;2461:16;2439:52;:::i;:::-;2516:29;2538:6;2516:29;:::i;:::-;2511:3;2507:39;2500:46;;2280:272;;;;;:::o;2558:367::-;;2721:67;2785:2;2780:3;2721:67;:::i;:::-;2714:74;;2818:34;2814:1;2809:3;2805:11;2798:55;2884:5;2879:2;2874:3;2870:12;2863:27;2916:2;2911:3;2907:12;2900:19;;2704:221;;;:::o;2931:366::-;;3094:67;3158:2;3153:3;3094:67;:::i;:::-;3087:74;;3191:34;3187:1;3182:3;3178:11;3171:55;3257:4;3252:2;3247:3;3243:12;3236:26;3288:2;3283:3;3279:12;3272:19;;3077:220;;;:::o;3303:366::-;;3466:67;3530:2;3525:3;3466:67;:::i;:::-;3459:74;;3563:34;3559:1;3554:3;3550:11;3543:55;3629:4;3624:2;3619:3;3615:12;3608:26;3660:2;3655:3;3651:12;3644:19;;3449:220;;;:::o;3675:370::-;;3838:67;3902:2;3897:3;3838:67;:::i;:::-;3831:74;;3935:34;3931:1;3926:3;3922:11;3915:55;4001:8;3996:2;3991:3;3987:12;3980:30;4036:2;4031:3;4027:12;4020:19;;3821:224;;;:::o;4051:372::-;;4214:67;4278:2;4273:3;4214:67;:::i;:::-;4207:74;;4311:34;4307:1;4302:3;4298:11;4291:55;4377:10;4372:2;4367:3;4363:12;4356:32;4414:2;4409:3;4405:12;4398:19;;4197:226;;;:::o;4429:365::-;;4592:67;4656:2;4651:3;4592:67;:::i;:::-;4585:74;;4689:34;4685:1;4680:3;4676:11;4669:55;4755:3;4750:2;4745:3;4741:12;4734:25;4785:2;4780:3;4776:12;4769:19;;4575:219;;;:::o;4800:369::-;;4963:67;5027:2;5022:3;4963:67;:::i;:::-;4956:74;;5060:34;5056:1;5051:3;5047:11;5040:55;5126:7;5121:2;5116:3;5112:12;5105:29;5160:2;5155:3;5151:12;5144:19;;4946:223;;;:::o;5175:368::-;;5338:67;5402:2;5397:3;5338:67;:::i;:::-;5331:74;;5435:34;5431:1;5426:3;5422:11;5415:55;5501:6;5496:2;5491:3;5487:12;5480:28;5534:2;5529:3;5525:12;5518:19;;5321:222;;;:::o;5549:369::-;;5712:67;5776:2;5771:3;5712:67;:::i;:::-;5705:74;;5809:34;5805:1;5800:3;5796:11;5789:55;5875:7;5870:2;5865:3;5861:12;5854:29;5909:2;5904:3;5900:12;5893:19;;5695:223;;;:::o;5924:329::-;;6087:67;6151:2;6146:3;6087:67;:::i;:::-;6080:74;;6184:33;6180:1;6175:3;6171:11;6164:54;6244:2;6239:3;6235:12;6228:19;;6070:183;;;:::o;6259:118::-;6346:24;6364:5;6346:24;:::i;:::-;6341:3;6334:37;6324:53;;:::o;6383:112::-;6466:22;6482:5;6466:22;:::i;:::-;6461:3;6454:35;6444:51;;:::o;6501:222::-;;6632:2;6621:9;6617:18;6609:26;;6645:71;6713:1;6702:9;6698:17;6689:6;6645:71;:::i;:::-;6599:124;;;;:::o;6729:210::-;;6854:2;6843:9;6839:18;6831:26;;6867:65;6929:1;6918:9;6914:17;6905:6;6867:65;:::i;:::-;6821:118;;;;:::o;6945:313::-;;7096:2;7085:9;7081:18;7073:26;;7145:9;7139:4;7135:20;7131:1;7120:9;7116:17;7109:47;7173:78;7246:4;7237:6;7173:78;:::i;:::-;7165:86;;7063:195;;;;:::o;7264:419::-;;7468:2;7457:9;7453:18;7445:26;;7517:9;7511:4;7507:20;7503:1;7492:9;7488:17;7481:47;7545:131;7671:4;7545:131;:::i;:::-;7537:139;;7435:248;;;:::o;7689:419::-;;7893:2;7882:9;7878:18;7870:26;;7942:9;7936:4;7932:20;7928:1;7917:9;7913:17;7906:47;7970:131;8096:4;7970:131;:::i;:::-;7962:139;;7860:248;;;:::o;8114:419::-;;8318:2;8307:9;8303:18;8295:26;;8367:9;8361:4;8357:20;8353:1;8342:9;8338:17;8331:47;8395:131;8521:4;8395:131;:::i;:::-;8387:139;;8285:248;;;:::o;8539:419::-;;8743:2;8732:9;8728:18;8720:26;;8792:9;8786:4;8782:20;8778:1;8767:9;8763:17;8756:47;8820:131;8946:4;8820:131;:::i;:::-;8812:139;;8710:248;;;:::o;8964:419::-;;9168:2;9157:9;9153:18;9145:26;;9217:9;9211:4;9207:20;9203:1;9192:9;9188:17;9181:47;9245:131;9371:4;9245:131;:::i;:::-;9237:139;;9135:248;;;:::o;9389:419::-;;9593:2;9582:9;9578:18;9570:26;;9642:9;9636:4;9632:20;9628:1;9617:9;9613:17;9606:47;9670:131;9796:4;9670:131;:::i;:::-;9662:139;;9560:248;;;:::o;9814:419::-;;10018:2;10007:9;10003:18;9995:26;;10067:9;10061:4;10057:20;10053:1;10042:9;10038:17;10031:47;10095:131;10221:4;10095:131;:::i;:::-;10087:139;;9985:248;;;:::o;10239:419::-;;10443:2;10432:9;10428:18;10420:26;;10492:9;10486:4;10482:20;10478:1;10467:9;10463:17;10456:47;10520:131;10646:4;10520:131;:::i;:::-;10512:139;;10410:248;;;:::o;10664:419::-;;10868:2;10857:9;10853:18;10845:26;;10917:9;10911:4;10907:20;10903:1;10892:9;10888:17;10881:47;10945:131;11071:4;10945:131;:::i;:::-;10937:139;;10835:248;;;:::o;11089:419::-;;11293:2;11282:9;11278:18;11270:26;;11342:9;11336:4;11332:20;11328:1;11317:9;11313:17;11306:47;11370:131;11496:4;11370:131;:::i;:::-;11362:139;;11260:248;;;:::o;11514:222::-;;11645:2;11634:9;11630:18;11622:26;;11658:71;11726:1;11715:9;11711:17;11702:6;11658:71;:::i;:::-;11612:124;;;;:::o;11742:214::-;;11869:2;11858:9;11854:18;11846:26;;11882:67;11946:1;11935:9;11931:17;11922:6;11882:67;:::i;:::-;11836:120;;;;:::o;11962:99::-;;12048:5;12042:12;12032:22;;12021:40;;;:::o;12067:169::-;;12185:6;12180:3;12173:19;12225:4;12220:3;12216:14;12201:29;;12163:73;;;;:::o;12242:305::-;;12301:20;12319:1;12301:20;:::i;:::-;12296:25;;12335:20;12353:1;12335:20;:::i;:::-;12330:25;;12489:1;12421:66;12417:74;12414:1;12411:81;12408:2;;;12495:18;;:::i;:::-;12408:2;12539:1;12536;12532:9;12525:16;;12286:261;;;;:::o;12553:185::-;;12610:20;12628:1;12610:20;:::i;:::-;12605:25;;12644:20;12662:1;12644:20;:::i;:::-;12639:25;;12683:1;12673:2;;12688:18;;:::i;:::-;12673:2;12730:1;12727;12723:9;12718:14;;12595:143;;;;:::o;12744:348::-;;12807:20;12825:1;12807:20;:::i;:::-;12802:25;;12841:20;12859:1;12841:20;:::i;:::-;12836:25;;13029:1;12961:66;12957:74;12954:1;12951:81;12946:1;12939:9;12932:17;12928:105;12925:2;;;13036:18;;:::i;:::-;12925:2;13084:1;13081;13077:9;13066:20;;12792:300;;;;:::o;13098:191::-;;13158:20;13176:1;13158:20;:::i;:::-;13153:25;;13192:20;13210:1;13192:20;:::i;:::-;13187:25;;13231:1;13228;13225:8;13222:2;;;13236:18;;:::i;:::-;13222:2;13281:1;13278;13274:9;13266:17;;13143:146;;;;:::o;13295:96::-;;13361:24;13379:5;13361:24;:::i;:::-;13350:35;;13340:51;;;:::o;13397:90::-;;13474:5;13467:13;13460:21;13449:32;;13439:48;;;:::o;13493:126::-;;13570:42;13563:5;13559:54;13548:65;;13538:81;;;:::o;13625:77::-;;13691:5;13680:16;;13670:32;;;:::o;13708:86::-;;13783:4;13776:5;13772:16;13761:27;;13751:43;;;:::o;13800:307::-;13868:1;13878:113;13892:6;13889:1;13886:13;13878:113;;;13977:1;13972:3;13968:11;13962:18;13958:1;13953:3;13949:11;13942:39;13914:2;13911:1;13907:10;13902:15;;13878:113;;;14009:6;14006:1;14003:13;14000:2;;;14089:1;14080:6;14075:3;14071:16;14064:27;14000:2;13849:258;;;;:::o;14113:320::-;;14194:1;14188:4;14184:12;14174:22;;14241:1;14235:4;14231:12;14262:18;14252:2;;14318:4;14310:6;14306:17;14296:27;;14252:2;14380;14372:6;14369:14;14349:18;14346:38;14343:2;;;14399:18;;:::i;:::-;14343:2;14164:269;;;;:::o;14439:180::-;14487:77;14484:1;14477:88;14584:4;14581:1;14574:15;14608:4;14605:1;14598:15;14625:180;14673:77;14670:1;14663:88;14770:4;14767:1;14760:15;14794:4;14791:1;14784:15;14811:180;14859:77;14856:1;14849:88;14956:4;14953:1;14946:15;14980:4;14977:1;14970:15;14997:102;;15089:2;15085:7;15080:2;15073:5;15069:14;15065:28;15055:38;;15045:54;;;:::o;15105:122::-;15178:24;15196:5;15178:24;:::i;:::-;15171:5;15168:35;15158:2;;15217:1;15214;15207:12;15158:2;15148:79;:::o;15233:122::-;15306:24;15324:5;15306:24;:::i;:::-;15299:5;15296:35;15286:2;;15345:1;15342;15335:12;15286:2;15276:79;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\r\n\r\ncontract Grumpy is ERC20Capped {\r\n    using SafeMath for uint256;\r\n    // Declare Charity Fee\r\n    uint256 CHARITY_FEE = 1;\r\n    // Declare Burn Fee\r\n    uint256 BURN_FEE = 1;\r\n    // Declare Developer Fee\r\n    uint256 DEVELOPER_FEE = 1;\r\n\r\n    address public constant charity_wallet =\r\n        0x2789f51DB58676895aFb1227D03c4E9501692581;\r\n    address public constant developer_wallet =\r\n        0xBCb683E807737c15558F9b0C1120fdf2EC848987;\r\n\r\n    // Declare the parameters of the token\r\n\r\n    string public token_name = \"Grumpy Finance\";\r\n    string public token_symbol = \"GRUMPY\";\r\n    // Create a capped supply of 100 Trillion Tokens\r\n    uint256 public capped_supply = 100 * 10**12 * 10**9;\r\n    // Create an initial balance of 100 Trillion Tokens\r\n    uint256 public initialBalance = 100 * 10**12 * 10**9;\r\n\r\n    // Declare the owner\r\n\r\n    address public owner;\r\n\r\n    constructor()\r\n        public\r\n        ERC20(token_name, token_symbol)\r\n        ERC20Capped(capped_supply)\r\n    {\r\n        require(initialBalance <= capped_supply, \"CommonERC20: cap exceeded\");\r\n        ERC20._mint(_msgSender(), initialBalance);\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 9;\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        uint256 burnAmount = amount.mul(BURN_FEE) / 100;\r\n        uint256 charityAmount = amount.mul(CHARITY_FEE) / 100;\r\n        uint256 developerAmount = amount.mul(DEVELOPER_FEE) / 100;\r\n\r\n        // uint256 developerAmount = amount.mul(DEVELOPER_FEE) / 100;\r\n        _burn(_msgSender(), burnAmount);\r\n        _transfer(_msgSender(), charity_wallet, charityAmount);\r\n        _transfer(_msgSender(), developer_wallet, developerAmount);\r\n        _transfer(\r\n            _msgSender(),\r\n            recipient,\r\n            amount.sub(burnAmount).sub(charityAmount).sub(developerAmount)\r\n        );\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/kdmcg/Documents/oz/contracts/Grumpy.sol",
  "ast": {
    "absolutePath": "/C/Users/kdmcg/Documents/oz/contracts/Grumpy.sol",
    "exportedSymbols": {
      "Context": [
        1255
      ],
      "ERC20": [
        1066
      ],
      "ERC20Capped": [
        1209
      ],
      "Grumpy": [
        164
      ],
      "IERC20": [
        1144
      ],
      "IERC20Metadata": [
        1234
      ],
      "SafeMath": [
        1567
      ]
    },
    "id": 165,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 1067,
        "src": "27:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 1568,
        "src": "84:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 1210,
        "src": "143:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1209,
              "src": "238:11:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "238:11:0"
          }
        ],
        "contractDependencies": [
          1066,
          1144,
          1209,
          1234,
          1255
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 164,
        "linearizedBaseContracts": [
          164,
          1209,
          1066,
          1234,
          1144,
          1255
        ],
        "name": "Grumpy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 7,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1567,
              "src": "263:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "257:27:0",
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "CHARITY_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "318:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "340:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "BURN_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "373:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "373:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "392:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "DEVELOPER_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "430:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "430:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "454:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "1dc1ba77",
            "id": 21,
            "mutability": "constant",
            "name": "charity_wallet",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "464:92:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373839663531444235383637363839356146623132323744303363344539353031363932353831",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "514:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2789f51DB58676895aFb1227D03c4E9501692581"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4465c7d1",
            "id": 24,
            "mutability": "constant",
            "name": "developer_wallet",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "563:94:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "563:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842436236383345383037373337633135353538463962304331313230666466324543383438393837",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "615:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xBCb683E807737c15558F9b0C1120fdf2EC848987"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "947a3168",
            "id": 27,
            "mutability": "mutable",
            "name": "token_name",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "712:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 25,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "712:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4772756d70792046696e616e6365",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "739:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_82b32de47664c689009001c2663ff34ddfb8698298f8582143b63ff4416ba5bf",
                "typeString": "literal_string \"Grumpy Finance\""
              },
              "value": "Grumpy Finance"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f772a34",
            "id": 30,
            "mutability": "mutable",
            "name": "token_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "762:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 28,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "762:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4752554d5059",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "791:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0efc2d0afc646bf4defab3f3e5c213dd2630b1cebbaf02a3951b6ade0af33d44",
                "typeString": "literal_string \"GRUMPY\""
              },
              "value": "GRUMPY"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2325b961",
            "id": 41,
            "mutability": "mutable",
            "name": "capped_supply",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "860:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              },
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                },
                "id": 36,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "313030",
                  "id": 32,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "891:3:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  },
                  "id": 35,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130",
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "897:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "hexValue": "3132",
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "901:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "src": "897:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  }
                },
                "src": "891:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "id": 39,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "906:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "39",
                  "id": 38,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "910:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "src": "906:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                }
              },
              "src": "891:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18369a2a",
            "id": 52,
            "mutability": "mutable",
            "name": "initialBalance",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "975:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "975:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                },
                "id": 47,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "313030",
                  "id": 43,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1007:3:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  },
                  "id": 46,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130",
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1013:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "hexValue": "3132",
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1017:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "src": "1013:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  }
                },
                "src": "1007:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "id": 50,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 48,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1022:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "39",
                  "id": 49,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1026:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "src": "1022:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                }
              },
              "src": "1007:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 54,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "1064:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 53,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1064:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1205:140:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "1224:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 66,
                          "name": "capped_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1242:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1224:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d6f6e45524332303a20636170206578636565646564",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1257:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d862ed5658a57bbeda36fc6d1264aa560dd0bcfc124d713d72c686ac193c1cfb",
                          "typeString": "literal_string \"CommonERC20: cap exceeded\""
                        },
                        "value": "CommonERC20: cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d862ed5658a57bbeda36fc6d1264aa560dd0bcfc124d713d72c686ac193c1cfb",
                          "typeString": "literal_string \"CommonERC20: cap exceeded\""
                        }
                      ],
                      "id": 64,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1216:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1308:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1322:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 71,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "1296:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1066_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 926,
                      "src": "1296:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:41:0"
                }
              ]
            },
            "id": 80,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 57,
                    "name": "token_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "1138:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  {
                    "id": 58,
                    "name": "token_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "1150:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  }
                ],
                "id": 59,
                "modifierName": {
                  "id": 56,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1066,
                  "src": "1132:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:31:0"
              },
              {
                "arguments": [
                  {
                    "id": 61,
                    "name": "capped_supply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "1185:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 62,
                "modifierName": {
                  "id": 60,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1209,
                  "src": "1173:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1173:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:0"
            },
            "scope": 164,
            "src": "1093:252:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              595
            ],
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1418:27:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "39",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1436:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  },
                  "functionReturnParameters": 85,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1429:8:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 82,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1393:8:0"
            },
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1411:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1410:7:0"
            },
            "scope": 164,
            "src": "1353:92:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              640
            ],
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1569:606:0",
              "statements": [
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "burnAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1580:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 103,
                          "name": "BURN_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1612:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1601:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1461,
                        "src": "1601:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1601:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1624:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1601:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1580:47:0"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "charityAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1638:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1638:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 112,
                          "name": "CHARITY_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1673:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 110,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1662:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1461,
                        "src": "1662:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1662:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1688:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1662:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1638:53:0"
                },
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "developerAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1702:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 121,
                          "name": "DEVELOPER_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1739:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 119,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1728:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1461,
                        "src": "1728:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1728:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1756:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1728:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 127,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1849:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1849:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 129,
                        "name": "burnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1863:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 126,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1843:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 133,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1895:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1895:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135,
                        "name": "charity_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1909:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136,
                        "name": "charityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1925:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 132,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "1885:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 140,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1960:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "developer_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1974:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "developerAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1992:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 139,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "1950:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 147,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "2043:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 149,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2070:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 158,
                            "name": "developerAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2140:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 155,
                                "name": "charityAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "2121:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 152,
                                    "name": "burnAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "2105:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 150,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 93,
                                    "src": "2094:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1446,
                                  "src": "2094:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2094:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1446,
                              "src": "2094:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2094:41:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1446,
                          "src": "2094:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2094:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 146,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "2019:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:148:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:148:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1531:8:0"
            },
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1471:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1490:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1470:35:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1558:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:6:0"
            },
            "scope": 164,
            "src": "1453:722:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 165,
        "src": "219:1959:0"
      }
    ],
    "src": "0:2180:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/kdmcg/Documents/oz/contracts/Grumpy.sol",
    "exportedSymbols": {
      "Context": [
        1255
      ],
      "ERC20": [
        1066
      ],
      "ERC20Capped": [
        1209
      ],
      "Grumpy": [
        164
      ],
      "IERC20": [
        1144
      ],
      "IERC20Metadata": [
        1234
      ],
      "SafeMath": [
        1567
      ]
    },
    "id": 165,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 1067,
        "src": "27:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 1568,
        "src": "84:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 1210,
        "src": "143:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1209,
              "src": "238:11:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "238:11:0"
          }
        ],
        "contractDependencies": [
          1066,
          1144,
          1209,
          1234,
          1255
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 164,
        "linearizedBaseContracts": [
          164,
          1209,
          1066,
          1234,
          1144,
          1255
        ],
        "name": "Grumpy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 7,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1567,
              "src": "263:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "257:27:0",
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "CHARITY_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "318:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "340:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "BURN_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "373:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "373:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "392:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "DEVELOPER_FEE",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "430:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "430:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "454:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "1dc1ba77",
            "id": 21,
            "mutability": "constant",
            "name": "charity_wallet",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "464:92:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832373839663531444235383637363839356146623132323744303363344539353031363932353831",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "514:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2789f51DB58676895aFb1227D03c4E9501692581"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4465c7d1",
            "id": 24,
            "mutability": "constant",
            "name": "developer_wallet",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "563:94:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "563:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842436236383345383037373337633135353538463962304331313230666466324543383438393837",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "615:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xBCb683E807737c15558F9b0C1120fdf2EC848987"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "947a3168",
            "id": 27,
            "mutability": "mutable",
            "name": "token_name",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "712:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 25,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "712:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4772756d70792046696e616e6365",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "739:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_82b32de47664c689009001c2663ff34ddfb8698298f8582143b63ff4416ba5bf",
                "typeString": "literal_string \"Grumpy Finance\""
              },
              "value": "Grumpy Finance"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f772a34",
            "id": 30,
            "mutability": "mutable",
            "name": "token_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "762:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 28,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "762:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4752554d5059",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "791:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0efc2d0afc646bf4defab3f3e5c213dd2630b1cebbaf02a3951b6ade0af33d44",
                "typeString": "literal_string \"GRUMPY\""
              },
              "value": "GRUMPY"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2325b961",
            "id": 41,
            "mutability": "mutable",
            "name": "capped_supply",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "860:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              },
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                },
                "id": 36,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "313030",
                  "id": 32,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "891:3:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  },
                  "id": 35,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130",
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "897:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "hexValue": "3132",
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "901:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "src": "897:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  }
                },
                "src": "891:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "id": 39,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "906:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "39",
                  "id": 38,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "910:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "src": "906:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                }
              },
              "src": "891:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18369a2a",
            "id": 52,
            "mutability": "mutable",
            "name": "initialBalance",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "975:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "975:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                },
                "id": 47,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "313030",
                  "id": 43,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1007:3:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  },
                  "id": 46,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130",
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1013:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "hexValue": "3132",
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1017:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "src": "1013:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000_by_1",
                    "typeString": "int_const 1000000000000"
                  }
                },
                "src": "1007:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000000_by_1",
                  "typeString": "int_const 100000000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "id": 50,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 48,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1022:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "39",
                  "id": 49,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1026:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "src": "1022:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                }
              },
              "src": "1007:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 54,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "1064:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 53,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1064:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1205:140:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "1224:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 66,
                          "name": "capped_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1242:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1224:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d6f6e45524332303a20636170206578636565646564",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1257:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d862ed5658a57bbeda36fc6d1264aa560dd0bcfc124d713d72c686ac193c1cfb",
                          "typeString": "literal_string \"CommonERC20: cap exceeded\""
                        },
                        "value": "CommonERC20: cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d862ed5658a57bbeda36fc6d1264aa560dd0bcfc124d713d72c686ac193c1cfb",
                          "typeString": "literal_string \"CommonERC20: cap exceeded\""
                        }
                      ],
                      "id": 64,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1216:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 74,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1308:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1322:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 71,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "1296:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1066_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 926,
                      "src": "1296:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:41:0"
                }
              ]
            },
            "id": 80,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 57,
                    "name": "token_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "1138:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  {
                    "id": 58,
                    "name": "token_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "1150:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  }
                ],
                "id": 59,
                "modifierName": {
                  "id": 56,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1066,
                  "src": "1132:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:31:0"
              },
              {
                "arguments": [
                  {
                    "id": 61,
                    "name": "capped_supply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "1185:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 62,
                "modifierName": {
                  "id": 60,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1209,
                  "src": "1173:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1173:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:0"
            },
            "scope": 164,
            "src": "1093:252:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              595
            ],
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1418:27:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "39",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1436:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  },
                  "functionReturnParameters": 85,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1429:8:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 82,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1393:8:0"
            },
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1411:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1410:7:0"
            },
            "scope": 164,
            "src": "1353:92:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              640
            ],
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1569:606:0",
              "statements": [
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "burnAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1580:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 103,
                          "name": "BURN_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1612:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1601:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1461,
                        "src": "1601:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1601:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1624:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1601:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1580:47:0"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "charityAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1638:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1638:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 112,
                          "name": "CHARITY_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1673:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 110,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1662:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1461,
                        "src": "1662:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1662:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1688:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1662:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1638:53:0"
                },
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "developerAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1702:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 121,
                          "name": "DEVELOPER_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1739:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 119,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1728:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1461,
                        "src": "1728:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1728:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1756:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1728:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 127,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1849:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1849:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 129,
                        "name": "burnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1863:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 126,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1843:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 133,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1895:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1895:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135,
                        "name": "charity_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1909:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136,
                        "name": "charityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1925:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 132,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "1885:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 140,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "1960:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "developer_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1974:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "developerAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1992:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 139,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "1950:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 147,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "2043:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 149,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2070:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 158,
                            "name": "developerAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2140:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 155,
                                "name": "charityAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "2121:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 152,
                                    "name": "burnAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "2105:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 150,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 93,
                                    "src": "2094:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1446,
                                  "src": "2094:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2094:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1446,
                              "src": "2094:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2094:41:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1446,
                          "src": "2094:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2094:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 146,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "2019:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:148:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:148:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1531:8:0"
            },
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1471:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1490:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1470:35:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1558:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:6:0"
            },
            "scope": 164,
            "src": "1453:722:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 165,
        "src": "219:1959:0"
      }
    ],
    "src": "0:2180:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe147410CE05667829D32Aad265ACC4e5e2CF445a",
      "transactionHash": "0xda961abb5e29a681466f4d17dc5c2eba3e975936ab7b0cf023fd1f1462cb82d5"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-15T15:57:01.906Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}